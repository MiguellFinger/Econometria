'license()'
demo()
license
var3 <- 3*0,5*(1-0,5)
var3<- 3*0,5*(1-0,5)
var3<- 3 * 0,5 * (1-0,5)
var3 <- 3 * 0,5 * (1-0,5)
var3 <- 3 * 0.5 * (1-0.5)
var
var3
olá
eu sou miguel
a
ggplot2
library(tidyverse)
library(ggplot2)
txhousing %>% glimpse
ggplot(data = txhousing, aes(x = median)) +
geom_histogram(fill = 'blue')
ggplot(data = txhousing, aes(x = median)) +
geom_histogram(fill = 'black')
ggplot(data = txhousing, aes(x = median)) +
geom_histogram(fill = 'black')
ggplot(data = txhousing, aes(x = median)) +
geom_histogram(bins = 7)
ggplot(data = 1, 2, 3, 4, aes(x = median)) +
geom_histogram(bins = 7)
ggplot(data = txhousing, aes(x = median)) +
geom_histogram(bins = 7, color = "green")
ggplot(data = txhousing, aes(x = median)) +
geom_histogram(bins = 7, color = "green", fill = green)
ggplot(data = txhousing, aes(x = median)) +
geom_histogram(bins = 7, color = "green", fill = "green"")
ggplot(data = txhousing, aes(x = median)) +
geom_histogram(bins = 7, color = "green", fill = "green")
ggplot(data = txhousing, aes(x = median)) +
geom_histogram(bins = 7, color = "green", fill = "green")
ggplot(data = txhousing, aes(x = median)) +
geom_histogram(bins = 7, color = "green", fill = "red")
ggplot(data = txhousing, aes(x = median)) +
geom_histogram(bins = 7, color = "green", fill = "red") + ggtitle(teste)
ggplot(data = txhousing, aes(x = median)) +
geom_histogram(bins = 7, color = "green", fill = "red") + ggtitle("teste"")
ggplot(data = txhousing, aes(x = median)) +
geom_histogram(bins = 7, color = "green", fill = "red") + ggtitle("teste"")
ggplot(data = txhousing, aes(x = median)) +
geom_histogram(bins = 7, color = "green", fill = "red") + ggtitle("teste")
ggplot(data = txhousing, aes(x = median)) +
geom_histogram(bins = 7, color = "green", fill = "red") + ggtitle("teste") + facet_wrap(~city)
ggplot(data = txhousing, aes(x = median)) +
geom_density(bins = 7, color = "green", fill = "red") + ggtitle("teste")
ggplot(data = txhousing, aes(x = median)) +
geom_density(color = "silver", fill = "white" ) + ggtitle("teste")
ggplot(data = txhousing, aes(x = median)) +
geom_density(color = "silver", fill = "white" ) + ggtitle("teste") + stat_density(geom = "area")
ggplot(data = txhousing, aes(x = median)) +
geom_density(color = "silver", fill = "white" ) + ggtitle("teste") + stat_density(geom = "area")
ggplot(data = txhousing, aes(x = median)) +
geom_density(color = "silver", fill = "white" ) + ggtitle("teste") + stat_density(geom = "area")
ggplot(data = txhousing, aes(x = median)) +
geom_density() + ggtitle('Preço Mediano das Vendas')
ggplot(data = txhousing, aes(x = median)) +
geom_density(stat = "density", mapping = "area") + ggtitle('Preço Mediano das Vendas')
ggplot(data = txhousing, aes(x = median)) +
geom_density(stat = "density") + ggtitle('Preço Mediano das Vendas')
ggplot(data = txhousing, aes(x = median)) +
geom_densitysp´das](stat = "density") + ggtitle('Preço Mediano das Vendas')
111/2
a1 <- 0,333*0,01
a1 <- (0.333*0.01)
a2 <- (0.666*0.01)
a3 <- ((11/111)*0.666)
11/111
a4 <- (11/111)
clean
clear
reset
a1 <- ((33.3/100)*(1/111))
a1 <- ((33.3/100)*(1/111))/2
a2 <- (1/3)*(1/111)
a1 <- ((1/3)*(1/111))/2
a3 <- ((1/3)*(11/111))/2
a1 <- ((1/3)*(1/111))/2
a4 <- ((1/3)*(11/111))/2
a4 <- ((1/3)*(11/111))
library(ggplot2)
fgtg
library(ggplot2)
]
u
g[-(2:4)]
# 10.2. #Indexação de vetores
g <- c(1, 5, "NEDUR", 2, 6)
g[3]
g[2:4]
g[-3]
g[-(2:4)]
g[c(1, 5)]
n <- g[c(1, 5)]
n
v <- c(1, 2, 2, 4, 5)
v[v == 2]
v[v < 4]
v[v %in% c(1, 2)]
?lenght
??lenght
'??lenght'
atach(ggplot2)
# Leitura pacotes
library(ggplot2)
library(dplyr)
library(tidyverse)
?lenght
?rep
?replicate
?lenght
?length
remove()
g[3]
g[2:4]
g[-3]
g[-(2:4)]
g[c(1, 5)]
n
v <- c(1, 2, 2, 4, 5)
v[v == 2]
v[v < 4]
v[v %in% c(1, 2)]
v[v %in% c(1, 2)]
v[v %in% c(1, 2)]
rm(list = ls())
# 10.3. Operações com vetores
k <- c(2, 4, 6, 8, 10)
k
k * 2
k / 2
k + 1
k - 1
s <- c(1, 2, 3, 4, 5)
b <- k + s
b
b >= 9
b[b >= 9]
which(b >= 9)
b[b >= 9]  #Número
# Limpar o Environment
rm(list = ls())
x <- c(2, 4, 6, 8, 10)
sum(x)
mean(x)
range(x)
summary(x)
# 10.5 Outras funções
g <- c(5, 2, 2, 1, 10)
sort(g)
sort(g, decreasing = TRUE)
?sort
table(g)
sort(g, decreasing = T)
table(g) #Ela conta os elementos
unique(g)
w <- unique(g)
order(g)
duplicated(g)
is.na(g)
dia <- c(01, 14, 30)
dia <- c(01, 14, 30)
mes <- c("jan", "mai", "dez")
ano <- c(1980, 1990, 2020)
paste(dia)
data <- paste(dia, mes, ano)
data
data <- paste(dia, mes, ano, sep = "")
data
data <- paste(dia, mes, ano, sep = "/")
data
data <- paste0(dia, mes, ano)
data
# 11.1. Criação de matrizes
?matrix
matrix(data = NA, nrow = 1, ncol = 1, byrow = FALSE,
dimnames = NULL)
View(matrix)
V <- matrix(1, ncol = 10, nrow = 10)
c1 <- c(-1, 4)
c2 <- c(3, 2)
c1
c2
X <- cbind(c1, c2)
x
X
X <- matrix(c(-1, 4, 3, 2), nrow = 2, ncol = 2)
X <- rbind(c1, c2)
X
N <- matrix(sample(c("NEDUR", "UFPR"), 25, replace = TRUE),
ncol = 5,
nrow = 5)
N
# 11.2. Indexação de matrizes
C
View(X)
[1, 2]
C <- matrix(seq(1, 100), ncol = 10, nrow = 10)
# 11.2. Indexação de matrizes
C
C[1, 2]
C[3,]
C[2:4, ]
C[, 1]
C[, 1:3]
C[-1,-1]
C[,-c(2:10)]
C[1,2]
C[1, 2]
# 11.4. Outras funções
sum(C)
mean(C)
sd(C)
range(C)
t(C)
rowSums(C)
rowMeans(C)
colSums(C)
colMeans(C)
summary(C)
?Sumary
?summary
dados$atividade <- factor(dados$atividade, levels = c("1","2"), labels=c("Sim", "Não"))
dados1 <- read.csv2(file = "dados1.csv", header = TRUE)
dados1 <- read.csv2(file = "dados1.csv", header = TRUE)
head(dados1)
wd()
as
1+1
dados1 <- read.csv2(file = "dados1.csv", header = TRUE)
setwd("~/")
setwd("C:/Users/Miguel/Desktop/Ciências econômicas/3º Ano/Econometria")
dados1 <- read.csv2(file = "dados1.csv", header = TRUE)
head(dados1)
library(dplyr)
library(lubridate)
data_inicial <- as.Date("2012-01-01")
tamanho <- 120
dados1$data3 <- seq(data_inicial, by = "month", length.out = tamanho)
dados1
data_inicial <- ymd("2012-01-01")
data_final <- ymd("2021-12-01")
dados1$data4 <- seq(data_inicial, data_final, "month")
dados1
library(ggplot2)
g1 <- ggplot(dados1, aes(data3, VAR_IPCA)) + #define a base de dados e as variáveis
geom_line() + # define o tipo de gráfico
xlab("meses") + # rótulo do eixo x ou horizontal
ylab("variação do IPCA") + # rótulo do eixo y ou vertical
scale_x_date(date_breaks = "6 month", date_labels = "%b\n%Y")
View(g1)
# formato da data
g1
g1 <- ggplot(dados1, aes(data3, TX_DES)) + #define a base de dados e as variáveis
geom_line() + # define o tipo de gráfico
xlab("meses") + # rótulo do eixo x ou horizontal
ylab("variação do IPCA") + # rótulo do eixo y ou vertical
scale_x_date(date_breaks = "6 month", date_labels = "%b\n%Y")
# formato da data
g1
g1 <- ggplot(dados1, aes(data3, TX_DES)) + #define a base de dados e as variáveis
geom_line() + # define o tipo de gráfico
xlab("meses") + # rótulo do eixo x ou horizontal
ylab("Variação da Taxa de Desemprego") + # rótulo do eixo y ou vertical
scale_x_date(date_breaks = "6 month", date_labels = "%b\n%Y")
# formato da data
g1
g2 <- ggplot(dados1, aes(data3, TX_DES)) + #define a base de dados e as variáveis
geom_line() + # define o tipo de gráfico
xlab("meses") + # rótulo do eixo x ou horizontal
ylab("Variação da Taxa de Desemprego") + # rótulo do eixo y ou vertical
scale_x_date(date_breaks = "12 month", date_labels = "%B\n%y")
# formato da data
g2
g2 <- ggplot(dados1, aes(data3, TX_DES)) + #define a base de dados e as variáveis
geom_line() + # define o tipo de gráfico
xlab("meses") + # rótulo do eixo x ou horizontal
ylab("Variação da Taxa") + # rótulo do eixo y ou vertical
scale_x_date(date_breaks = "12 month", main = "Série Histórica Desemprego",
date_labels = "%B\n%y")
g2 <- ggplot(dados1, aes(data3, TX_DES)) + #define a base de dados e as variáveis
geom_line() + # define o tipo de gráfico
xlab("meses") + # rótulo do eixo x ou horizontal
ylab("Variação da Taxa") + # rótulo do eixo y ou vertical
scale_x_date(date_breaks = "12 month",
date_labels = "%B\n%y",
main = "Série Histórica Desemprego"
)
g1 <- ggplot(dados1, aes(data3, TX_DES)) + #define a base de dados e as variáveis
geom_line() + # define o tipo de gráfico
xlab("meses") + # rótulo do eixo x ou horizontal
ylab("Variação da Taxa de Desemprego") + # rótulo do eixo y ou vertical
scale_x_date(date_breaks = "12 month", date_labels = "%b\n%Y")
# formato da data
g1
g3 <- ggplot(dados1, aes(data3)) + #define a base de dados e as variáveis
geom_line(aes( y = VAR_IPCA, colour = "Variação do IPCA")) +
geom_line(aes(y = TX_DES, colour = "Taxa Desconto")) + # incluindo variável TX_DESC
xlab("meses") + # rótulo do eixo x ou horizontal
ylab("Var. IPC; Tx. Desconto") + # rótulo do eixo y ou vertical
scale_x_date(date_breaks = "12 month", date_labels = "%B\n%y") # define as quebras e
# formato da data
g3
dados1 <- read.csv2(file = "dados1.csv", header = TRUE)
data_inicial <- ymd("2012-01-01")
data_final <- ymd("2021-12-01")
dados1$data4 <- seq(data_inicial, data_final, "month")
dados1
g1 <- ggplot(dados1, aes(data4, TX_DES)) + #define a base de dados e as variáveis
geom_line() + # define o tipo de gráfico
xlab("meses") + # rótulo do eixo x ou horizontal
ylab("Variação da Taxa de Desemprego") + # rótulo do eixo y ou vertical
scale_x_date(date_breaks = "12 month", date_labels = "%b\n%Y")
# formato da data
g1
?ggplot
library(car)
library(carData)
library(dplyr)
library(knitr)
library(lmtest)
library(pacman)
library(psych)
Base <- read.csv2('Pasta2.csv')
library(car)
library(carData)
library(dplyr)
library(knitr)
library(lmtest)
library(pacman)
library(psych)
Base <- read.csv2('Pasta2.csv')
View (Base)
regl <- lm(TX_DES ~ SL_MIN + TX_SLC + VAR_IPCA ,   data = Base)
View(regl)
fitted.values(regl)
EST_REG <- fitted.values(regl)
